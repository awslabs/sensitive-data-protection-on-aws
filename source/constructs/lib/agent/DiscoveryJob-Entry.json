{
    "Comment": "Sensitive Data Protection on AWS (Version:@TEMPLATE_SOLUTION_VERSION@)",
    "StartAt": "Choice Database Type",
    "States": {
      "Choice Database Type": {
        "Type": "Choice",
        "Choices": [
          {
            "Variable": "$.DatabaseType",
            "StringEquals": "s3",
            "Next": "Parallel(Exist S3)"
          }
        ],
        "Default": "StructuredOnly"
      },
      "StructuredOnly": {
        "Type": "Task",
        "Resource": "arn:${AWS::Partition}:states:::states:startExecution.waitForTaskToken",
        "Parameters": {
          "StateMachineArn": "arn:${AWS::Partition}:states:${AWS::Region}:${AWS::AccountId}:stateMachine:SDPS-DiscoveryJob-Structured",
          "Input.$": "$",
          "Name.$": "$.RunName"
        },
        "OutputPath": "$.Output",
        "Next": "SQS SendMessage"
      },
      "Parallel(Exist S3)": {
        "Type": "Parallel",
        "Branches": [
          {
            "StartAt": "Structured",
            "States": {
              "Structured": {
                "Type": "Task",
                "Resource": "arn:${AWS::Partition}:states:::states:startExecution.sync:2",
                "Parameters": {
                  "StateMachineArn": "arn:${AWS::Partition}:states:${AWS::Region}:${AWS::AccountId}:stateMachine:SDPS-DiscoveryJob-Structured",
                  "Input.$": "$",
                  "Name.$": "$.RunName"
                },
                "End": true,
                "OutputPath": "$.Output"
              }
            }
          },
          {
            "StartAt": "Unstructured",
            "States": {
              "Unstructured": {
                "Type": "Task",
                "Resource": "arn:${AWS::Partition}:states:::states:startExecution.sync:2",
                "Parameters": {
                  "StateMachineArn": "arn:${AWS::Partition}:states:${AWS::Region}:${AWS::AccountId}:stateMachine:SDPS-DiscoveryJob-Unstructured",
                  "Input.$": "$",
                  "Name.$": "$.RunName"
                },
                "End": true,
                "OutputPath": "$.Output"
              }
            }
          }
        ],
        "Next": "Convert Data Format"
      },
      "Convert Data Format": {
        "Type": "Pass",
        "Next": "Choice Error",
        "Parameters": {
          "Structured.$": "$.[0]",
          "Unstructured.$": "$.[1]"
        },
        "Comment": "Choice does not support subscripts, so it is necessary to convert the array into a dictionary"
      },
      "Choice Error": {
        "Type": "Choice",
        "Choices": [
          {
            "Variable": "$.Unstructured.Result.State",
            "StringEquals": "Failed",
            "Next": "FilterResult1"
          }
        ],
        "Default": "FilterResult0"
      },
      "FilterResult0": {
        "Type": "Pass",
        "Next": "SQS SendMessage",
        "OutputPath": "$.Structured"
      },
      "SQS SendMessage": {
        "Type": "Task",
        "Resource": "arn:${AWS::Partition}:states:::sqs:sendMessage",
        "Parameters": {
          "MessageBody.$": "$",
          "QueueUrl.$": "$.QueueUrl"
        },
        "End": true
      },
      "FilterResult1": {
        "Type": "Pass",
        "Next": "SQS SendMessage",
        "OutputPath": "$.Unstructured"
      }
    }
  }