{
    "StartAt": "Lambda Invoke",
    "States": {
      "Lambda Invoke": {
        "Type": "Task",
        "Resource": "arn:${AWS::Partition}:states:::lambda:invoke",
        "Parameters": {
          "Payload.$": "$",
          "FunctionName": "arn:${AWS::Partition}:lambda:${AWS::Region}:${AWS::AccountId}:function:SDPS-DiscoveryJob-Unstructured-Temp"
        },
        "Retry": [
          {
            "ErrorEquals": [
              "Lambda.ServiceException",
              "Lambda.AWSLambdaException",
              "Lambda.SdkClientException",
              "Lambda.TooManyRequestsException"
            ],
            "IntervalSeconds": 2,
            "MaxAttempts": 6,
            "BackoffRate": 2
          }
        ],
        "Next": "SageMaker CreateProcessingJob",
        "ResultPath": "$.RunCrawler"
      },
      "SageMaker CreateProcessingJob": {
        "Type": "Task",
        "Resource": "arn:${AWS::Partition}:states:::sagemaker:createProcessingJob",
        "Parameters": {
          "AppSpecification": {
            "ContainerArguments": [
              "--crawler_result_bucket_name",
              "icyxu-glue-assets-member-a",
              "--crawler_result_object_key",
              "bucket_info/s3_bucket_info.json",
              "--destination_database",
              "s3-icyxu-test-parser-1-database"
            ],
            "ContainerEntrypoint": [
              "python",
              "main.py"
            ],
            "ImageUri": "417882474213.dkr.ecr.cn-northwest-1.amazonaws.com.cn/sdp_test_data_parser:latest"
          },
          "ProcessingResources": {
            "ClusterConfig": {
              "InstanceCount": 1,
              "InstanceType": "ml.m5.2xlarge",
              "VolumeSizeInGB": 1
            }
          },
          "RoleArn": "arn:${AWS::Partition}:iam::417882474213:role/service-role/AmazonSageMaker-ExecutionRole-20230911T145712",
          "ProcessingJobName.$": "$.RunName"
        },
        "Next": "Wait X Seconds",
        "ResultPath": "$.CreateProcessingJob"
      },
      "Wait X Seconds": {
        "Type": "Wait",
        "Next": "Glue StartJobRun",
        "Seconds": 30
      },
      "Glue StartJobRun": {
        "Type": "Task",
        "Resource": "arn:${AWS::Partition}:states:::glue:startJobRun",
        "Parameters": {
          "JobName.$": "$.JobNameUnstructured",
          "Arguments": {
            "--JobId.$": "$.JobId",
            "--RunId.$": "$.RunId",
            "--RunDatabaseId.$": "$.RunDatabaseId",
            "--AccountId.$": "$.AccountId",
            "--Region.$": "$.Region",
            "--DatabaseType.$": "$.DatabaseType",
            "--DatabaseName.$": "$.DatabaseName",
            "--TableName.$": "$.TableName",
            "--TemplateId.$": "$.TemplateId",
            "--TemplateSnapshotNo.$": "$.TemplateSnapshotNo",
            "--Depth.$": "$.DepthUnstructured",
            "--ExcludeKeywords.$": "$.ExcludeKeywords",
            "--IncludeKeywords.$": "$.IncludeKeywords",
            "--ExcludeFileExtensions.$": "$.ExcludeFileExtensions",
            "--IncludeFileExtensions.$": "$.IncludeFileExtensions",
            "--BaseTime.$": "$.BaseTime",
            "--DetectionThreshold.$": "$.DetectionThreshold",
            "--AdminAccountId.$": "$.AdminAccountId",
            "--BucketName.$": "$.BucketName",
            "--TableBegin": "-1",
            "--TableEnd": "-1",
            "--additional-python-modules.$": "$.AdditionalPythonModules"
          }
        },
        "Next": "DescribeProcessingJob",
        "ResultPath": "$.StartJobRun"
      },
      "DescribeProcessingJob": {
        "Type": "Task",
        "Next": "Job Complete?",
        "Parameters": {
          "ProcessingJobName.$": "$.RunName"
        },
        "Resource": "arn:${AWS::Partition}:states:::aws-sdk:sagemaker:describeProcessingJob",
        "ResultPath": "$.GetProcessingJob"
      },
      "Job Complete?": {
        "Type": "Choice",
        "Choices": [
          {
            "Variable": "$.GetProcessingJob.ProcessingJobStatus",
            "StringEquals": "Failed",
            "Next": "Job Failed"
          },
          {
            "Variable": "$.GetProcessingJob.ProcessingJobStatus",
            "StringEquals": "Completed",
            "Next": "Job Succeeded"
          }
        ],
        "Default": "Wait X Seconds"
      },
      "Job Succeeded": {
        "Type": "Pass",
        "End": true,
        "Result": {
          "State": "Succeeded"
        },
        "ResultPath": "$.Result"
      },
      "Job Failed": {
        "Type": "Pass",
        "ResultPath": "$.Result",
        "Result": {
          "State": "Failed",
          "Message": "ProcessingJob is failed."
        },
        "Next": "Fail"
      },
      "Fail": {
        "Type": "Fail"
      }
    }
  }